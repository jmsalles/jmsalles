# üöÄ Guia VAAPI com Intel iHD (intel-media-driver) no Rocky Linux 10 ‚Äî **vers√£o final corrigida + p√≥s-update**

## üîé Resumo

Tutorial **funcional** para habilitar acelera√ß√£o de v√≠deo via **VAAPI** usando o driver **Intel iHD** no **Rocky Linux 10**. Cobrimos checagens de hardware/kernel, **compila√ß√£o correta** (com as flags atuais do Meson), instala√ß√£o do `libva-utils` (vainfo), configura√ß√£o do ambiente, **testes** e ‚Äî **novo** ‚Äî a se√ß√£o de **p√≥s-atualiza√ß√£o de kernel/sistema**: quando (n√£o) precisa refazer algo e como validar/recuperar r√°pido.

Corre√ß√µes j√° aplicadas:

* Removidos pacotes Xorg desnecess√°rios.
* `meson`: usar **`yes/no/auto`** (n√£o `true/false`) e **sem** `-Dwith_drm` (op√ß√£o removida).
* Garantido `cmake/meson/ninja` via DNF (ou fallback via `pip`).
* Logs ‚Äú**Cannot find any crtc**‚Äù e ‚Äú**disabling eDP**‚Äù s√£o normais em servidor/headless.

---

## üß≠ Sum√°rio

* [Vis√£o geral](#vis√£o-geral)
* [Pr√©-requisitos](#pr√©-requisitos)
* [Checagens r√°pidas](#checagens-r√°pidas)
* [Compila√ß√£o e instala√ß√£o (ordem correta)](#compila√ß√£o-e-instala√ß√£o-ordem-correta)

  * [1) gmmlib](#1-gmmlib)
  * [2) libva](#2-libva)
  * [3) libva-utils (vainfo)](#3-libva-utils-vainfo)
  * [4) intel-media-driver (iHD)](#4-intel-media-driver-ihd)
* [Configura√ß√£o do ambiente](#configura√ß√£o-do-ambiente)
* [Testes pr√°ticos](#testes-pr√°ticos)
* [üì¶ P√≥s-atualiza√ß√£o (kernel/sistema): preciso refazer algo?](#p√≥s-atualiza√ß√£o-kernelsistema-preciso-refazer-algo)
* [Troubleshooting (erros comuns)](#troubleshooting-erros-comuns)
* [Checklist r√°pido](#checklist-r√°pido)
* [Refer√™ncias r√°pidas](#refer√™ncias-r√°pidas)
* [FAQ](#faq)
* [Assinatura](#assinatura)

---

## Vis√£o geral

Pipeline VAAPI na iGPU Intel:

```
Apps (ffmpeg/mpv/navegadores)
        ‚Üì
      libva / libva-utils (vainfo)
        ‚Üì
  intel-media-driver (iHD)
        ‚Üì
   Kernel i915 (DRM/KMS) + firmware (DMC/GuC/HuC)
```

Para **Gen9+** (Skylake/Kaby Lake‚Ä¶), use **iHD** (n√£o i965). O backend **DRM** √© autodetectado pelo `libva` quando `libdrm` est√° presente.

---

## Pr√©-requisitos

```bash
sudo dnf config-manager --set-enabled crb
sudo dnf -y upgrade --refresh
sudo dnf -y install epel-release dnf-plugins-core
sudo dnf -y groupinstall "Development Tools"
sudo dnf -y install cmake meson ninja-build python3-pip \
  pkgconf-pkg-config pkgconf \
  git gcc gcc-c++ make automake autoconf libtool \
  libdrm libdrm-devel libpciaccess-devel \
  libX11-devel libXext-devel libXfixes-devel libXrandr-devel \
  wayland-devel wayland-protocols-devel linux-firmware
```

Fallback (se `meson`/`ninja` n√£o vierem via DNF):

```bash
python3 -m pip install --user meson ninja
echo 'export PATH="$HOME/.local/bin:$PATH"' | sudo tee /etc/profile.d/localbin.sh
source /etc/profile.d/localbin.sh
```

Valida√ß√£o r√°pida:

```bash
cmake --version
meson --version
ninja --version
pkg-config --modversion libdrm
```

---

## Checagens r√°pidas

```bash
lsmod | grep -i i915 || sudo modprobe i915
ls -l /dev/dri
dmesg | grep -i -E "i915|dmc" | tail -n 100
```

> Em **headless** √© normal ver `disabling eDP` / `Cannot find any crtc` ‚Äî n√£o impede VAAPI.

---

## Compila√ß√£o e instala√ß√£o (ordem correta)

### 1) gmmlib

```bash
cd /usr/src
sudo rm -rf gmmlib
sudo git clone https://github.com/intel/gmmlib.git
cd gmmlib
sudo rm -rf build
sudo mkdir -p build && cd build
sudo cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
sudo make -j"$(nproc)"
sudo make install
sudo ldconfig
```

### 2) libva  *(sem `-Dwith_drm`)*

```bash
cd /usr/src
sudo rm -rf libva
sudo git clone https://github.com/intel/libva.git
cd libva
sudo rm -rf build
sudo meson setup build -Dprefix=/usr
# (Opcional GUI) sudo meson setup build -Dprefix=/usr -Dwith_x11=yes -Dwith_wayland=yes
sudo meson compile -C build
sudo meson install -C build
sudo ldconfig
```

### 3) libva-utils (vainfo)

```bash
cd /usr/src
sudo rm -rf libva-utils
sudo git clone https://github.com/intel/libva-utils.git
cd libva-utils
sudo rm -rf build
sudo meson setup build -Dprefix=/usr
sudo meson compile -C build
sudo meson install -C build
sudo ldconfig
```

### 4) intel-media-driver (iHD)

```bash
cd /usr/src
sudo rm -rf media-driver
sudo git clone https://github.com/intel/media-driver.git
cd media-driver
sudo rm -rf build
sudo mkdir -p build && cd build
sudo cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DINSTALL_DRIVER_SYSCONF=ON
sudo make -j"$(nproc)"
sudo make install
sudo ldconfig

ls -l /usr/lib64/dri/iHD_drv_video.so
```

---

## Configura√ß√£o do ambiente

```bash
sudo vim /etc/profile.d/vaapi.sh
```

Cole:

```bash
export LIBVA_DRIVER_NAME=iHD
export LIBVA_DRIVERS_PATH=/usr/lib64/dri
```

Aplique e garanta acesso ao render node:

```bash
source /etc/profile.d/vaapi.sh
getent group video || sudo groupadd video
sudo usermod -aG video "$USER"
# Fa√ßa logout/login para novas sess√µes herdarem o grupo.
```

---

## Testes pr√°ticos

```bash
vainfo --display drm --device /dev/dri/renderD128 | sed -n '1,200p'
ffmpeg -hide_banner -hwaccels
```

Transcode VAAPI (exemplos):

```bash
ffmpeg -hide_banner -y -hwaccel vaapi -vaapi_device /dev/dri/renderD128 \
  -i input.mp4 -vf 'format=nv12,hwupload' \
  -c:v h264_vaapi -b:v 5M out-h264-vaapi.mp4
```

```bash
ffmpeg -hide_banner -y -hwaccel vaapi -vaapi_device /dev/dri/renderD128 \
  -i input.mp4 -vf 'format=nv12,hwupload' \
  -c:v hevc_vaapi -b:v 5M out-hevc-vaapi.mp4
```

---

## üì¶ P√≥s-atualiza√ß√£o (kernel/sistema): preciso refazer algo?

### Regra pr√°tica

**Na maioria dos casos, n√£o.** Atualiza√ß√µes normais de kernel/sistema **n√£o** quebram o stack **gmmlib ‚Üí libva/libva-utils ‚Üí intel-media-driver**.

### Quando **n√£o** precisa refazer

* Atualiza√ß√£o de kernel via `dnf upgrade` e `linux-firmware`.
* Atualiza√ß√µes de libs sem quebra de ABI.
* Mudan√ßas 10.x ‚Üí 10.y sem altera√ß√£o dr√°stica de API do `libva`.

### Valida√ß√£o p√≥s-reboot (30 s)

```bash
uname -r
ls -l /dev/dri
dmesg | grep -i -E "i915|dmc|guc|huc" | tail -n 50
vainfo --display drm --device /dev/dri/renderD128 | sed -n '1,80p'
ffmpeg -hide_banner -hwaccels
```

Se `vainfo` mostrar **Intel iHD driver** e perfis (H.264/HEVC/VP9), est√° tudo bem.

### Quando **pode** precisar refazer

* Voc√™ removeu/alterou arquivos em **/usr/lib64/dri** ou **/usr/lib64**.
* Atualizou para vers√µes ‚Äúbem novas‚Äù de `libva`/`libdrm` com quebra de compatibilidade.
* Pacotes RPM sobrescreveram os mesmos caminhos.
* Reinstala√ß√£o limpa do sistema.

**Sinais de quebra:**

* `vainfo: error initializing VAAPI`
* `symbol lookup error` em `vainfo`/`ffmpeg`
* Carrega `i965` em vez de `iHD` mesmo com `LIBVA_DRIVER_NAME=iHD`

### Recupera√ß√£o m√≠nima (sem recompilar do zero)

Se as pastas de build ainda existem em `/usr/src`:

```bash
# gmmlib
cd /usr/src/gmmlib/build
sudo make install && sudo ldconfig

# libva
cd /usr/src/libva
sudo meson install -C build && sudo ldconfig

# libva-utils
cd /usr/src/libva-utils
sudo meson install -C build && sudo ldconfig

# intel-media-driver
cd /usr/src/media-driver/build
sudo make install && sudo ldconfig
```

Se os diret√≥rios foram apagados, recompile na mesma ordem (r√°pido):
`gmmlib ‚Üí libva ‚Üí libva-utils ‚Üí media-driver`.

### Dicas

* **Vari√°veis**: o `/etc/profile.d/vaapi.sh` persiste; n√£o precisa refazer.
* **Grupo `video`**: persiste; apenas novas sess√µes precisam relogar.
* **GuC/HuC**: se aplicou `i915.enable_guc=2` com `grubby --update-kernel=ALL`, a flag vai para todos os kernels instalados. Em kernels novos:

  ```bash
  grubby --info=ALL | grep -i i915.enable_guc || echo "Sem flag; aplicar novamente."
  ```
* **Isolar de RPMs**: se quiser blindar futuras atualiza√ß√µes, pode reinstalar usu√°rios em `/usr/local` (alterando `-DCMAKE_INSTALL_PREFIX=/usr/local` ou `-Dprefix=/usr/local` no Meson/CMake).

---

## Troubleshooting (erros comuns)

* **Meson: `Unknown options: "with_drm"`**
  `-Dwith_drm` foi removido. Use apenas `-Dprefix=/usr` (X11/Wayland opcionais).

* **Meson: `Value "true"... use yes/no/auto`**
  Meson aceita **`yes/no/auto`**, n√£o `true/false`.

* **`vainfo: error initializing VAAPI`**
  Verifique `/dev/dri/renderD128`, grupo `video`, vari√°veis `LIBVA_*`, exist√™ncia de `/usr/lib64/dri/iHD_drv_video.so`.

* **Carregou i965 em vez de iHD**
  For√ßar:

  ```bash
  export LIBVA_DRIVER_NAME=iHD
  export LIBVA_DRIVERS_PATH=/usr/lib64/dri
  vainfo
  ```

* **Firmware/DMC**
  Confirme `linux-firmware` e o DMC da sua gera√ß√£o em `dmesg`.

---

## Checklist r√°pido

* `i915` carregado e `/dev/dri/renderD128` presente
* `gmmlib` ‚Üí `libva` ‚Üí `libva-utils` ‚Üí `intel-media-driver` instalados
* **Sem** `-Dwith_drm`; Meson com `yes/no/auto`
* `LIBVA_DRIVER_NAME=iHD` e `LIBVA_DRIVERS_PATH=/usr/lib64/dri` ativos
* Usu√°rio no grupo **video**
* `vainfo` mostra **Intel iHD driver** + perfis
* `ffmpeg -hwaccels` lista `vaapi` e transcoding funciona

---

## Refer√™ncias r√°pidas

```bash
# Kernel / dispositivos
lsmod | grep -i i915
ls -l /dev/dri
dmesg | grep -i -E "i915|dmc" | tail -n 100

# Toolchain
cmake --version
meson --version
ninja --version
pkg-config --modversion libdrm
```

```bash
# Build resumido ‚Äî gmmlib
cd /usr/src/gmmlib && sudo rm -rf build && sudo mkdir build && cd build && \
  sudo cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr && \
  sudo make -j"$(nproc)" && sudo make install && sudo ldconfig
```

```bash
# Build resumido ‚Äî libva
cd /usr/src/libva && sudo rm -rf build && sudo meson setup build -Dprefix=/usr && \
  sudo meson compile -C build && sudo meson install -C build && sudo ldconfig
```

```bash
# Build resumido ‚Äî libva-utils
cd /usr/src/libva-utils && sudo rm -rf build && sudo meson setup build -Dprefix=/usr && \
  sudo meson compile -C build && sudo meson install -C build && sudo ldconfig
```

```bash
# Build resumido ‚Äî intel-media-driver
cd /usr/src/media-driver && sudo rm -rf build && sudo mkdir build && cd build && \
  sudo cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DINSTALL_DRIVER_SYSCONF=ON && \
  sudo make -j"$(nproc)" && sudo make install && sudo ldconfig
```

```bash
# Ambiente
sudo vim /etc/profile.d/vaapi.sh
# (colar LIBVA_DRIVER_NAME/DRIVERS_PATH)
source /etc/profile.d/vaapi.sh
```

```bash
# Testes
vainfo --display drm --device /dev/dri/renderD128 | sed -n '1,200p'
ffmpeg -hide_banner -hwaccels
```

---

## FAQ

**VAAPI precisa de Xorg/Wayland?** N√£o ‚Äî em **headless** funciona via DRM (`/dev/dri/renderD128`).
**Por que sem `-Dwith_drm`?** O `libva` autodetecta DRM; a flag foi removida.
**Uso iHD ou i965?** Em Gen9+ use **iHD**; for√ßamos com `LIBVA_DRIVER_NAME=iHD`.
**Logs `Cannot find any crtc` importam?** Em headless, **n√£o**.

---

## Assinatura

Criado por **Jeferson Salles**
LinkedIn: [https://www.linkedin.com/in/jmsalles/](https://www.linkedin.com/in/jmsalles/)
E-mail: [jefersonmattossalles@gmail.com](mailto:jefersonmattossalles@gmail.com)
GitHub: [https://github.com/jmsalles/IaC/](https://github.com/jmsalles/IaC/)
